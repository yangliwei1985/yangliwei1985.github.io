<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>集合 on ylw&#39;s blog</title>
    <link>https://iblog.zone/tags/%E9%9B%86%E5%90%88/</link>
    <description>Recent content in 集合 on ylw&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 08 Mar 2022 15:41:23 +0000</lastBuildDate><atom:link href="https://iblog.zone/tags/%E9%9B%86%E5%90%88/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java集合03</title>
      <link>https://iblog.zone/archives/java%E9%9B%86%E5%90%8803/</link>
      <pubDate>Tue, 08 Mar 2022 15:41:23 +0000</pubDate>
      
      <guid>https://iblog.zone/archives/java%E9%9B%86%E5%90%8803/</guid>
      <description>1.Map集合 1.1Map集合概述和特点【理解】   Map集合概述
interface Map&amp;lt;K,V&amp;gt; K：键的类型；V：值的类型   Map集合的特点
 双列集合,一个键对应一个值 键不可以重复,值可以重复    Map集合的基本使用
public class MapDemo01 {  public static void main(String[] args) {  //创建集合对象  Map&amp;lt;String,String&amp;gt; map = new HashMap&amp;lt;String,String&amp;gt;();   //V put(K key, V value) 将指定的值与该映射中的指定键相关联  map.put(&amp;#34;itheima001&amp;#34;,&amp;#34;林青霞&amp;#34;);  map.put(&amp;#34;itheima002&amp;#34;,&amp;#34;张曼玉&amp;#34;);  map.put(&amp;#34;itheima003&amp;#34;,&amp;#34;王祖贤&amp;#34;);  map.put(&amp;#34;itheima003&amp;#34;,&amp;#34;柳岩&amp;#34;);   //输出集合对象  System.out.println(map);  } }   1.2Map集合的基本功能【应用】   方法介绍
   方法名 说明     V put(K key,V value) 添加元素   V remove(Object key) 根据键删除键值对元素   void clear() 移除所有的键值对元素   boolean containsKey(Object key) 判断集合是否包含指定的键   boolean containsValue(Object value) 判断集合是否包含指定的值   boolean isEmpty() 判断集合是否为空   int size() 集合的长度，也就是集合中键值对的个数      示例代码</description>
    </item>
    
    <item>
      <title>Java集合02</title>
      <link>https://iblog.zone/archives/java%E9%9B%86%E5%90%8802/</link>
      <pubDate>Tue, 08 Mar 2022 14:13:24 +0000</pubDate>
      
      <guid>https://iblog.zone/archives/java%E9%9B%86%E5%90%8802/</guid>
      <description>1.Set集合 1.1Set集合概述和特点【应用】  不可以存储重复元素 没有索引,不能使用普通for循环遍历  1.2Set集合的使用【应用】 存储字符串并遍历
public class MySet1 {  public static void main(String[] args) {  //创建集合对象  Set&amp;lt;String&amp;gt; set = new TreeSet&amp;lt;&amp;gt;();  //添加元素  set.add(&amp;#34;ccc&amp;#34;);  set.add(&amp;#34;aaa&amp;#34;);  set.add(&amp;#34;aaa&amp;#34;);  set.add(&amp;#34;bbb&amp;#34;);  // for (int i = 0; i &amp;lt; set.size(); i++) { // //Set集合是没有索引的，所以不能使用通过索引获取元素的方法 // }   //遍历集合  Iterator&amp;lt;String&amp;gt; it = set.iterator();  while (it.hasNext()){  String s = it.next();  System.</description>
    </item>
    
    <item>
      <title>Java集合01</title>
      <link>https://iblog.zone/archives/java%E9%9B%86%E5%90%8801/</link>
      <pubDate>Tue, 08 Mar 2022 11:00:09 +0000</pubDate>
      
      <guid>https://iblog.zone/archives/java%E9%9B%86%E5%90%8801/</guid>
      <description>1.Collection集合 1.1数组和集合的区别【理解】   相同点
都是容器,可以存储多个数据
  不同点
  数组的长度是不可变的,集合的长度是可变的
  数组可以存基本数据类型和引用数据类型
集合只能存引用数据类型,如果要存基本数据类型,需要存对应的包装类
    1.2集合类体系结构【理解】 1.3Collection 集合概述和使用【应用】   Collection集合概述
 是单例集合的顶层接口,它表示一组对象,这些对象也称为Collection的元素 JDK 不提供此接口的任何直接实现.它提供更具体的子接口(如Set和List)实现    创建Collection集合的对象
 多态的方式 具体的实现类ArrayList    Collection集合常用方法
   方法名 说明     boolean add(E e) 添加元素   boolean remove(Object o) 从集合中移除指定的元素   boolean removeIf(Object o) 根据条件进行移除   void clear() 清空集合中的元素   boolean contains(Object o) 判断集合中是否存在指定的元素   boolean isEmpty() 判断集合是否为空   int size() 集合的长度，也就是集合中元素的个数      1.</description>
    </item>
    
  </channel>
</rss>
