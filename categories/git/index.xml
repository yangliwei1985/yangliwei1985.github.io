<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>git on ylw&#39;s blog</title>
    <link>https://iblog.zone/categories/git/</link>
    <description>Recent content in git on ylw&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 21 Feb 2022 17:31:16 +0000</lastBuildDate><atom:link href="https://iblog.zone/categories/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git的安装及使用</title>
      <link>https://iblog.zone/archives/git%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 21 Feb 2022 17:31:16 +0000</pubDate>
      
      <guid>https://iblog.zone/archives/git%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/</guid>
      <description>1.Git介绍 1.1版本控制(理解) 无论是代码编写，还是文档编写，我们都会遇到对文档内容反复修改的情况
1.2开发中存在的问题(理解)  程序员小明负责的模块就要完成了，就在即将提交发布之前的一瞬间，电脑突然蓝屏，硬盘光荣下岗！  几个月来的努力付之东流
  老王需要在项目中加入一个很复杂的功能，一边尝试，一边修改代码，就这样摸索了一个星期。 可是这被改得面目全非的代码已经回不到从前了。
  小明和老王先后从文件服务器上下载了同一个文件
  因项目中Bug过多，导致项目进度拖延，项目经理老徐因此被骂，但不清楚Bug是手下哪一个程序员写的
  开发中要解决的问题
 代码备份 版本控制 协同工作 责任追溯    1.3SVN版本控制(理解) SVN是集中式版本控制系统，版本库是集中放在中央服务器的，而开发人员工作的时候，用的都是自己的电脑， 所以首先要从中央服务器下载最新的版本，然后开发，开发完后，需要把自己开发的代码提交到中央服务器。
  服务器单点故障
将会导致所有人员无法工作
  而服务器硬盘损坏
这意味着，你可能失去了该项目的所有历史记录，这是毁灭性的。
  1.4Git版本控制(理解) Git是在2005年，Linux系统的创建者Linus Torvalds,为了帮助全球的开发者，维护Linux系统内核的开发 而开发了自己的开源分布式版本控制工具,分为两种类型的仓库：本地仓库和远程仓库。
  每一个客户端都保存了完整的历史记录
服务器的故障，都可以通过客户端的记录得以恢复。
  2.Git下载和安装 2.1Git的下载(应用) 官网下载地址：https://git-scm.com/downloads
2.2Git的安装(应用)   双击安装包，进入安装向导界面
  指定安装目录
  一路next下一步
  等待安装
  安装完成</description>
    </item>
    
  </channel>
</rss>
