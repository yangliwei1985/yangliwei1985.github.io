<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>监控 on ylw&#39;s blog</title>
    <link>https://iblog.zone/categories/%E7%9B%91%E6%8E%A7/</link>
    <description>Recent content in 监控 on ylw&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 15 Apr 2022 14:44:22 +0800</lastBuildDate><atom:link href="https://iblog.zone/categories/%E7%9B%91%E6%8E%A7/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker Swarm集群监控方案</title>
      <link>https://iblog.zone/archives/docker-swarm%E9%9B%86%E7%BE%A4%E7%9B%91%E6%8E%A7%E6%96%B9%E6%A1%88/</link>
      <pubDate>Fri, 15 Apr 2022 14:44:22 +0800</pubDate>
      
      <guid>https://iblog.zone/archives/docker-swarm%E9%9B%86%E7%BE%A4%E7%9B%91%E6%8E%A7%E6%96%B9%E6%A1%88/</guid>
      <description>docker swarm监控方案有很多，主流的有cAdvisor+InfluxDB+Grafana和cAdvisor+Prometheus+Grafana，本文介绍cAdvisor+InfluxDB+Grafana方案
组件说明  cAdvisor：数据收集模块，需要部署在集群中的每一个节点上，当然前提条件是节点接受task。 InfluxDB：数据存储模块。 Grafana：数据展示模块  创建docker compose文件 在manager结点上创建文件，并输入如下内容：
version: &amp;#39;3&amp;#39;  services:  influx:  image: influxdb:1.8	# 保证模板兼容性  volumes:  - influx:/var/lib/influxdb  deploy:  replicas: 1  placement:  constraints:  - node.role == manager   grafana:  image: grafana/grafana:4.2.0  # 保证模板兼容性  ports:  - 0.0.0.0:80:3000  volumes:  - grafana:/var/lib/grafana  depends_on:  - influx  deploy:  replicas: 1  placement:  constraints:  - node.</description>
    </item>
    
  </channel>
</rss>
